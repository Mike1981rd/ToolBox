<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Admin Dashboard</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <!-- Flag Icons CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/lipis/flag-icons@6.6.6/css/flag-icons.min.css"/>
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin-style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/roles-style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/users-style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/customers-style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/instructors-style.css" asp-append-version="true" />
    
    <style>
        /* Sidebar link effects */
        .sidebar .list-group-item {
            transition: all 0.2s ease;
            position: relative;
            overflow: hidden;
        }
        
        .sidebar .list-group-item:hover {
            transform: translateX(5px);
            background-color: rgba(13, 110, 253, 0.1);
        }
        
        .sidebar .list-group-item::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 3px;
            background: #0d6efd;
            transform: scaleY(0);
            transition: transform 0.2s ease;
        }
        
        .sidebar .list-group-item:hover::before,
        .sidebar .list-group-item.active::before {
            transform: scaleY(1);
        }
        
        .sidebar .list-group-item.active {
            background-color: rgba(13, 110, 253, 0.1);
            color: #0d6efd;
        }
        
        /* Remove hover effects from language selector */
        #languageDropdown:hover {
            background-color: transparent !important;
            border-color: transparent !important;
            box-shadow: none !important;
            transform: none !important;
        }
        
        .lang-select:hover {
            background-color: rgba(0, 0, 0, 0.04) !important;
        }
    </style>
    
    @await RenderSectionAsync("Styles", required: false)
</head>
<body data-bs-theme="light">
    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar-wrapper">
            <div class="sidebar-heading d-flex flex-column justify-content-center align-items-center">
                <div class="logo-container">
                    <img src="~/img/toolbox-logo.svg" alt="ToolBox Logo" class="logo" id="sidebarLogo">
                </div>
                <button class="btn btn-link d-lg-none position-absolute top-0 end-0" id="menu-close" aria-expanded="true" aria-label="Close sidebar">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="list-group list-group-flush sidebar-nav">
                @{
                    var readableModules = ViewBag.UserReadableModules as List<string> ?? new List<string>();
                }
                
                @* Dashboard siempre visible para usuarios autenticados *@
                <a href="@Url.Action("Dashboard", "Admin")" class="list-group-item list-group-item-action active" data-translate-key="dashboard">
                    <i class="fas fa-tachometer-alt fa-fw"></i><span class="sidebar-item-text">Dashboard</span>
                </a>
                
                @if (readableModules.Contains("Roles"))
                {
                    <a href="@Url.Action("Index", "Roles")" class="list-group-item list-group-item-action" data-translate-key="roles_menu">
                        <i class="fas fa-user-shield fa-fw"></i><span class="sidebar-item-text">Roles</span>
                    </a>
                }
                
                @if (readableModules.Contains("Users"))
                {
                    <a href="@Url.Action("Index", "Users")" class="list-group-item list-group-item-action" data-translate-key="users_menu">
                        <i class="fas fa-users fa-fw"></i><span class="sidebar-item-text">Users</span>
                    </a>
                }
                
                @if (readableModules.Contains("Customers"))
                {
                    <a href="@Url.Action("Index", "Customers")" class="list-group-item list-group-item-action" data-translate-key="customers_menu">
                        <i class="fas fa-id-card-alt fa-fw"></i><span class="sidebar-item-text">Customers</span>
                    </a>
                }
                
                @if (readableModules.Contains("LifeAreas"))
                {
                    <a href="@Url.Action("Index", "LifeAreas")" class="list-group-item list-group-item-action" data-translate-key="areas_of_life">
                        <i class="fas fa-heartbeat fa-fw"></i><span class="sidebar-item-text">Areas of Life</span>
                    </a>
                }
                
                @if (readableModules.Contains("XRayLife"))
                {
                    <a href="@Url.Action("Index", "XRayLife")" class="list-group-item list-group-item-action" data-translate-key="xray_of_life">
                        <i class="fas fa-x-ray fa-fw"></i><span class="sidebar-item-text">X-Ray of life</span>
                    </a>
                }
                
                @if (readableModules.Contains("LifeAssessment"))
                {
                    <a href="@Url.Action("Index", "LifeAssessment")" class="list-group-item list-group-item-action" data-translate-key="sidebar.lifeAssessmentQuestionnaires">
                        <i class="fas fa-clipboard-list fa-fw"></i><span class="sidebar-item-text">Life Assessment Questionnaires</span>
                    </a>
                }
                
                @if (readableModules.Contains("QuestionnaireTemplates"))
                {
                    <a href="@Url.Action("Index", "QuestionnaireTemplates")" class="list-group-item list-group-item-action" data-translate-key="sidebar.questionnaireTemplates">
                        <i class="fas fa-file-alt fa-fw"></i><span class="sidebar-item-text">Cuestionarios</span>
                    </a>
                }
                
                @if (readableModules.Contains("ClientQuizzes"))
                {
                    <a href="@Url.Action("Index", "ClientQuizzes")" class="list-group-item list-group-item-action" data-translate-key="sidebar.clientQuizzes">
                        <i class="fas fa-clipboard-check fa-fw"></i><span class="sidebar-item-text">Quiz</span>
                    </a>
                }
                
                @if (readableModules.Contains("WheelOfLife"))
                {
                    <a href="@Url.Action("Index", "WheelOfLife")" class="list-group-item list-group-item-action" data-translate-key="sidebar.wheelOfLife">
                        <i class="fas fa-chart-pie fa-fw"></i><span class="sidebar-item-text">Wheel of Life</span>
                    </a>
                }
                
                @if (readableModules.Contains("WheelOfProgress"))
                {
                    <a href="@Url.Action("Index", "WheelOfProgress")" class="list-group-item list-group-item-action" data-translate-key="sidebar.wheelOfProgress">
                        <i class="fas fa-chart-line fa-fw"></i><span class="sidebar-item-text">Wheel of Progress</span>
                    </a>
                }
                
                @if (readableModules.Contains("Tasks"))
                {
                    <a href="@Url.Action("Index", "Tasks")" class="list-group-item list-group-item-action" data-translate-key="sidebar.tasks">
                        <i class="fas fa-tasks fa-fw"></i><span class="sidebar-item-text">Tasks</span>
                    </a>
                }
                
                @if (readableModules.Contains("HabitTracker"))
                {
                    <a href="@Url.Action("Index", "HabitTracker")" class="list-group-item list-group-item-action" data-translate-key="sidebar.habitTracker">
                        <i class="fas fa-calendar-check fa-fw"></i><span class="sidebar-item-text">Habit Tracker</span>
                    </a>
                }
                
                @if (readableModules.Contains("Calendario"))
                {
                    <a href="@Url.Action("Index", "Calendario")" class="list-group-item list-group-item-action" data-translate-key="sidebar.calendar">
                        <i class="fas fa-calendar-alt fa-fw"></i><span class="sidebar-item-text">Calendar</span>
                    </a>
                }
                
                @if (readableModules.Contains("Sessions"))
                {
                    <a href="@Url.Action("Index", "Sessions")" class="list-group-item list-group-item-action" data-translate-key="sidebar.sessions">
                        <i class="fas fa-handshake fa-fw"></i><span class="sidebar-item-text">Sessions</span>
                    </a>
                }
                
                @if (readableModules.Contains("Notifications"))
                {
                    <a href="@Url.Action("Index", "NotificationsMvc")" class="list-group-item list-group-item-action" data-translate-key="sidebar.notifications">
                        <i class="fas fa-bell fa-fw"></i><span class="sidebar-item-text">Notifications</span>
                    </a>
                }
                
                @* Notification Preferences - available for all authenticated users *@
                <a href="@Url.Action("Preferences", "NotificationsMvc")" class="list-group-item list-group-item-action" data-translate-key="sidebar.notificationPreferences">
                    <i class="fas fa-cog fa-fw"></i><span class="sidebar-item-text">Notification Preferences</span>
                </a>
                
                @if (readableModules.Contains("WelcomeMessage"))
                {
                    <a href="@Url.Action("Edit", "WelcomeMessage")" class="list-group-item list-group-item-action" data-translate-key="default_welcome_message">
                        <i class="fas fa-comment-dots fa-fw"></i><span class="sidebar-item-text">Default Welcome Message</span>
                    </a>
                }
                
                @if (readableModules.Contains("Instructors"))
                {
                    <a href="@Url.Action("Index", "Instructors")" class="list-group-item list-group-item-action" data-translate-key="coaches_menu">
                        <i class="fas fa-chalkboard-teacher fa-fw"></i><span class="sidebar-item-text">Instructors</span>
                    </a>
                }
                <a href="@Url.Action("Create", "Users")" class="list-group-item list-group-item-action d-none" data-translate-key="add_user">
                    <i class="fas fa-user-plus fa-fw"></i><span class="sidebar-item-text">Add USER</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action d-none" data-translate-key="profile">
                    <i class="fas fa-user-circle fa-fw"></i><span class="sidebar-item-text">Profile</span>
                </a>
                
                @* Academy con submenú - mostrar solo si tiene permisos para Topics o VideoManagement *@
                @if (readableModules.Contains("Topics") || readableModules.Contains("VideoManagement"))
                {
                    <a href="#academySubmenu" data-bs-toggle="collapse" aria-expanded="false" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center" data-translate-key="academy">
                        <div>
                            <i class="fas fa-graduation-cap fa-fw"></i><span class="sidebar-item-text">Academy</span>
                        </div>
                        <i class="fas fa-chevron-down fa-fw transition-icon"></i>
                    </a>
                    <ul class="collapse list-unstyled" id="academySubmenu">
                        @if (readableModules.Contains("Topics"))
                        {
                            <li>
                                <a href="@Url.Action("Index", "Topics")" class="list-group-item list-group-item-action ps-5" data-translate-key="sidebar.academia.topics">
                                    <i class="fas fa-chalkboard-teacher fa-fw"></i><span class="sidebar-item-text">Topics</span>
                                </a>
                            </li>
                        }
                        @if (readableModules.Contains("VideoManagement"))
                        {
                            <li>
                                <a href="@Url.Action("Index", "VideoManagement")" class="list-group-item list-group-item-action ps-5" data-translate-key="sidebar.academia.videoManagement">
                                    <i class="fas fa-video fa-fw"></i><span class="sidebar-item-text">Video Management</span>
                                </a>
                            </li>
                        }
                    </ul>
                }
                
                @if (readableModules.Contains("ToolboxAcademy"))
                {
                    <a href="@Url.Action("Index", "ToolboxAcademy")" class="list-group-item list-group-item-action" data-translate-key="page_titles.toolboxAcademy">
                        <i class="fas fa-university fa-fw"></i><span class="sidebar-item-text">Academia Toolbox</span>
                    </a>
                }
                @if (readableModules.Contains("Analytics"))
                {
                    <a href="@Url.Action("Analytics", "Admin")" class="list-group-item list-group-item-action" data-translate-key="website_setting">
                        <i class="fas fa-chart-bar fa-fw"></i><span class="sidebar-item-text">Analytics</span>
                    </a>
                }
                
                @if (readableModules.Contains("WebsiteSettings"))
                {
                    <a href="@Url.Action("Index", "WebsiteSettings")" class="list-group-item list-group-item-action" data-translate-key="sidebar.websiteSettings">
                        <i class="fas fa-cog fa-fw"></i><span class="sidebar-item-text">Website Settings</span>
                    </a>
                }
                
                @if (readableModules.Contains("EmailContents"))
                {
                    <a href="@Url.Action("Index", "EmailContents")" class="list-group-item list-group-item-action" data-translate-key="email.emailContents">
                        <i class="fas fa-envelope fa-fw"></i><span class="sidebar-item-text">Email Contents</span>
                    </a>
                }
                <a href="#" class="list-group-item list-group-item-action mt-auto d-none" data-translate-key="logout">
                    <i class="fas fa-sign-out-alt fa-fw"></i><span class="sidebar-item-text">Logout</span>
                </a>
            </div>
        </div>
        <!-- Page Content -->
        <div id="page-content-wrapper">
            <!-- Top Navigation -->
            <nav class="navbar navbar-expand navbar-light top-navbar">
                <div class="container-fluid px-4">
                    <button class="btn d-lg-none" id="sidebarToggle" aria-expanded="false" aria-label="Toggle sidebar">
                        <i class="fas fa-bars"></i>
                    </button>
                    <button class="btn d-none d-lg-block" id="sidebarToggleDesktop" aria-expanded="true" aria-label="Toggle sidebar">
                        <i class="fas fa-bars"></i>
                    </button>
                    
                    <div class="d-flex ms-auto align-items-center">
                        <!-- Language Selector -->
                        <div class="dropdown me-3">
                            <button class="btn dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-language me-1"></i> <span id="selectedLanguage">Select Language</span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="languageDropdown">
                                <li><a class="dropdown-item lang-select" href="#" data-lang="en" data-translate-key="language_english">English</a></li>
                                <li><a class="dropdown-item lang-select" href="#" data-lang="es" data-translate-key="language_spanish">Español</a></li>
                            </ul>
                        </div>
                        
                        <!-- Theme Toggler -->
                        <button class="btn me-3" id="theme-toggle">
                            <i class="fas fa-moon" id="theme-icon"></i>
                        </button>
                        
                        <!-- Notifications -->
                        <div class="me-3 position-relative dropdown" id="notificationDropdownContainer">
                            <a href="#" class="btn position-relative" id="notificationBellBtn" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-bell" id="notificationBellIcon"></i>
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger d-none" id="notificationBadge">
                                    <span id="notificationCount">0</span>
                                    <span class="visually-hidden">unread notifications</span>
                                </span>
                            </a>
                            
                            <!-- Notification Dropdown -->
                            <div class="dropdown-menu dropdown-menu-end notification-dropdown-vuexy" id="notificationDropdown" aria-labelledby="notificationBellBtn">
                                <!-- Header -->
                                <div class="notification-header-vuexy">
                                    <div class="d-flex justify-content-between align-items-center px-3 py-3">
                                        <div class="d-flex align-items-center">
                                            <h6 class="notification-title-vuexy mb-0 me-3" data-translate-key="notifications.title">Notification</h6>
                                            <span class="notification-count-badge" id="notificationHeaderCount" data-translate-key="notifications.newCount">0 New</span>
                                        </div>
                                        <button class="btn btn-link p-0 notification-envelope-btn" id="markAllReadBtn" title="Marcar todas como leídas">
                                            <i class="far fa-envelope"></i>
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Notifications List -->
                                <div class="notification-list-container-vuexy" id="notificationListContainer">
                                    <div class="notification-loading text-center py-4">
                                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <div class="mt-2 text-muted small" data-translate-key="common.loading">Cargando...</div>
                                    </div>
                                </div>
                                
                                <!-- Footer -->
                                <div class="notification-footer-vuexy">
                                    <a href="@Url.Action("Index", "NotificationsMvc")" class="notification-view-all-vuexy d-block text-center" data-translate-key="notifications.viewAll">
                                        View All Notifications
                                    </a>
                                </div>
                            </div>
                        </div>
                        
                        <!-- User Profile -->
                        <div class="dropdown">
                            <a href="#" class="d-flex align-items-center text-decoration-none dropdown-toggle" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <div class="avatar-wrapper me-2">
                                    @{
                                        var userName = User.Identity?.Name ?? "Usuario";
                                        var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                                        var userEmail = User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value;
                                        
                                        // Por ahora usar un avatar por defecto o las iniciales
                                        var initials = string.Join("", userName.Split(' ').Take(2).Select(n => n.FirstOrDefault().ToString().ToUpper()));
                                        if (string.IsNullOrEmpty(initials)) initials = "U";
                                    }
                                    
                                    <div id="userAvatar" class="user-avatar-container">
                                        <!-- El avatar se cargará dinámicamente con JavaScript -->
                                        <svg width="38" height="38" xmlns="http://www.w3.org/2000/svg" class="rounded-circle user-avatar-placeholder" style="background-color: #7367f0;">
                                            <text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" font-family="Arial" font-size="14" fill="#fff">@initials</text>
                                        </svg>
                                    </div>
                                </div>
                                <span class="user-name">@userName</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li>
                                    <div class="dropdown-item-text">
                                        <div class="fw-semibold">@userName</div>
                                        <div class="text-muted small">@userEmail</div>
                                    </div>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="@Url.Action("Details", "Users", new { id = userId })" data-translate-key="profile"><i class="fas fa-user me-2"></i>Mi Perfil</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Edit", "Users", new { id = userId })" data-translate-key="settings"><i class="fas fa-cog me-2"></i>Configuración</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <form asp-action="Logout" asp-controller="Auth" method="post" class="m-0">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="dropdown-item text-danger">
                                            <i class="fas fa-sign-out-alt me-2"></i>
                                            <span data-translate-key="logout">Cerrar Sesión</span>
                                        </button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </nav>
            
            <!-- Main Content -->
            <div class="container-fluid px-4 py-4" id="mainContent">
                @if (ViewBag.HideTitleInLayout != true)
                {
                    <h3 class="mt-2 mb-3 fw-normal">@ViewData["Title"]</h3>
                }
                <div id="contentArea">
                    @RenderBody()
                </div>
            </div>
            
            <!-- Footer -->
            <footer class="footer mt-auto py-2">
                <div class="container-fluid px-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-muted small">&copy; @DateTime.Now.Year - ToolBox Admin Dashboard</span>
                        <div>
                            <a href="#" class="me-2"><i class="fab fa-github"></i></a>
                            <a href="#" class="me-2"><i class="fab fa-twitter"></i></a>
                            <a href="#"><i class="fab fa-linkedin"></i></a>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
    
    <!-- Mobile Sidebar Overlay -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- jQuery (debe cargarse antes que otros scripts) -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    
    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Custom JavaScript -->
    <script src="~/js/admin-script.js" asp-append-version="true"></script>
    <script src="~/js/notifications-bell.js?v=@DateTime.Now.Ticks" asp-append-version="true"></script>
    <script src="~/js/notifications-debug.js?v=@DateTime.Now.Ticks" asp-append-version="true"></script>
    <!-- No necesitamos image-url-fixer.js ya que todas las URLs ahora son SVG en base64 -->
    
    <!-- Active Link and Mobile Sidebar Script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Mark current page as active in sidebar
            const currentPath = window.location.pathname;
            const sidebarLinks = document.querySelectorAll('.sidebar .list-group-item[href]:not([href="#"])');
            
            sidebarLinks.forEach(link => {
                const linkPath = new URL(link.href).pathname;
                if (currentPath === linkPath || 
                    (currentPath.startsWith(linkPath) && linkPath !== '/' && linkPath !== '')) {
                    link.classList.add('active');
                } else {
                    link.classList.remove('active');
                }
            });
            
            // Mobile Sidebar Toggle Functionality
            const sidebar = document.getElementById('sidebar-wrapper');
            const overlay = document.getElementById('sidebarOverlay');
            const toggleBtn = document.getElementById('sidebarToggle');
            const toggleBtnDesktop = document.getElementById('sidebarToggleDesktop');
            const closeBtn = document.getElementById('menu-close');
            const pageContent = document.getElementById('page-content-wrapper');
            
            // Function to open sidebar (mobile)
            function openSidebar() {
                sidebar.classList.add('show');
                overlay.classList.add('show');
                toggleBtn.setAttribute('aria-expanded', 'true');
                document.body.style.overflow = 'hidden'; // Prevent background scrolling
            }
            
            // Function to close sidebar (mobile)
            function closeSidebar() {
                sidebar.classList.remove('show');
                overlay.classList.remove('show');
                toggleBtn.setAttribute('aria-expanded', 'false');
                document.body.style.overflow = ''; // Restore scrolling
            }
            
            // Function to toggle sidebar (desktop)
            function toggleSidebarDesktop() {
                sidebar.classList.toggle('toggled');
                pageContent.classList.toggle('toggled');
                const isCollapsed = sidebar.classList.contains('toggled');
                toggleBtnDesktop.setAttribute('aria-expanded', !isCollapsed);
            }
            
            // Mobile toggle button
            toggleBtn?.addEventListener('click', function(e) {
                e.preventDefault();
                if (sidebar.classList.contains('show')) {
                    closeSidebar();
                } else {
                    openSidebar();
                }
            });
            
            // Desktop toggle button
            toggleBtnDesktop?.addEventListener('click', function(e) {
                e.preventDefault();
                toggleSidebarDesktop();
            });
            
            // Close button in sidebar
            closeBtn?.addEventListener('click', function(e) {
                e.preventDefault();
                closeSidebar();
            });
            
            // Click overlay to close sidebar
            overlay?.addEventListener('click', function() {
                closeSidebar();
            });
            
            // Close sidebar when clicking on a link (mobile)
            sidebarLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    // Don't close sidebar if clicking on a submenu toggle
                    if (link.getAttribute('data-bs-toggle') === 'collapse') {
                        e.stopPropagation();
                        return;
                    }
                    
                    // Only close sidebar for actual navigation links on mobile
                    if (window.innerWidth < 992 && !link.classList.contains('dropdown-toggle')) {
                        closeSidebar();
                    }
                });
            });
            
            // Prevent sidebar close when clicking inside submenu
            const academySubmenu = document.getElementById('academySubmenu');
            academySubmenu?.addEventListener('click', function(e) {
                e.stopPropagation();
            });
            
            // Handle window resize
            window.addEventListener('resize', function() {
                if (window.innerWidth >= 992) {
                    // Desktop view - reset mobile sidebar state
                    closeSidebar();
                    document.body.style.overflow = '';
                }
            });
            
            // Handle escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && sidebar.classList.contains('show')) {
                    closeSidebar();
                }
            });
        });
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>