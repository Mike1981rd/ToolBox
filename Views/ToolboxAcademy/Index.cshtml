@model ToolBox.Models.ToolboxAcademyIndexViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <style>
        /* Academy Hero Header with Gradient */
        .academy-hero-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 3rem 0 4rem 0;
            margin-bottom: -2rem;
            position: relative;
            overflow: hidden;
        }
        
        .academy-hero-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.9) 0%, rgba(118, 75, 162, 0.9) 100%);
            z-index: 1;
        }
        
        .academy-hero-content {
            position: relative;
            z-index: 2;
        }
        
        .hero-title {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: white !important;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        
        .hero-subtitle {
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
            color: white !important;
            opacity: 0.95;
        }
        
        .hero-description {
            font-size: 1.1rem;
            color: white !important;
            opacity: 0.9;
            margin-bottom: 2rem;
        }
        
        .hero-stats {
            display: flex;
            gap: 2rem;
            margin-top: 2rem;
        }
        
        .hero-stat-item {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            padding: 1rem 1.5rem;
            text-align: center;
            transition: transform 0.3s ease;
        }
        
        .hero-stat-item:hover {
            transform: translateY(-2px);
        }
        
        .hero-stat-number {
            font-size: 2rem;
            font-weight: 700;
            display: block;
        }
        
        .hero-stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        /* Featured Card Floating */
        .featured-card-floating {
            position: absolute;
            top: 2rem;
            right: 2rem;
            z-index: 3;
            background: linear-gradient(135deg, #ff6b9d 0%, #ff8a9e 100%);
            color: white;
            padding: 2rem;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(255, 107, 157, 0.3);
            text-align: center;
            min-width: 250px;
            border: 2px solid rgba(255, 255, 255, 0.2);
        }
        
        .featured-card-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            display: block;
        }
        
        .featured-card-number {
            font-size: 3rem;
            font-weight: 700;
            display: block;
            margin-bottom: 0.5rem;
        }
        
        .featured-card-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }
        
        .featured-card-description {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        /* Search Section */
        .search-section {
            background: white;
            padding: 2rem;
            margin: 2rem 0;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            border: 1px solid #e9ecef;
        }
        
        .search-input-group {
            max-width: 600px;
            margin: 0 auto;
        }
        
        .search-input-group .form-control {
            border-radius: 50px 0 0 50px;
            border: 2px solid #e9ecef;
            padding: 1rem 1.5rem;
            font-size: 1.1rem;
            box-shadow: none;
        }
        
        .search-input-group .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .search-btn {
            border-radius: 0 50px 50px 0;
            padding: 1rem 2rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: 2px solid #667eea;
            color: white;
            font-weight: 600;
        }
        
        .search-btn:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            border-color: #5a6fd8;
            color: white;
        }
        
        /* Video Cards Enhanced */
        .video-card-enhanced {
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            overflow: hidden;
            border: 1px solid #f0f0f0;
            height: 100%;
        }
        
        .video-card-enhanced:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 30px rgba(0,0,0,0.15);
        }
        
        .video-thumbnail-container {
            position: relative;
            width: 100%;
            height: 200px;
            overflow: hidden;
            background: #f8f9fa;
        }
        
        .video-thumbnail {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        
        .video-card-enhanced:hover .video-thumbnail {
            transform: scale(1.05);
        }
        
        .video-play-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0,0,0,0.7);
            color: white;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            transition: all 0.3s ease;
        }
        
        .video-card-enhanced:hover .video-play-overlay {
            background: rgba(102, 126, 234, 0.9);
            transform: translate(-50%, -50%) scale(1.1);
        }
        
        .video-duration-badge {
            position: absolute;
            bottom: 8px;
            right: 8px;
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.75rem;
            font-weight: 600;
        }
        
        .video-unavailable-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
            font-weight: 600;
        }
        
        .featured-badge-floating {
            position: absolute;
            top: 8px;
            left: 8px;
            background: linear-gradient(45deg, #ff6b9d, #feca57);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.7rem;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .video-card-body {
            padding: 1.5rem;
        }
        
        .category-badge-enhanced {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background: #f8f9fa;
            color: white !important;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-decoration: none;
            margin-bottom: 1rem;
            transition: all 0.2s ease;
        }
        
        .category-badge-enhanced span {
            color: white !important;
        }
        
        .category-badge-enhanced:hover {
            color: white !important;
            text-decoration: none;
            transform: scale(1.05);
            filter: brightness(0.9);
        }
        
        .video-title-enhanced {
            font-size: 1.1rem;
            font-weight: 700;
            margin-bottom: 0.75rem;
            line-height: 1.4;
            color: #2d3748;
        }
        
        .video-title-enhanced a {
            color: inherit;
            text-decoration: none;
            transition: color 0.2s ease;
        }
        
        .video-title-enhanced a:hover {
            color: #667eea;
        }
        
        .video-description-enhanced {
            color: #718096;
            font-size: 0.9rem;
            line-height: 1.5;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .video-metadata {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
            font-size: 0.8rem;
            color: #a0aec0;
        }
        
        .metadata-item {
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }
        
        .video-author-section {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1rem;
        }
        
        .author-info {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .author-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            object-fit: cover;
        }
        
        .author-name {
            font-weight: 600;
            color: #4a5568;
            font-size: 0.9rem;
        }
        
        .video-stats {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 0.8rem;
            color: #a0aec0;
        }
        
        .watch-video-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            font-size: 0.9rem;
        }
        
        .watch-video-btn:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }
        
        /* Sidebar Enhanced */
        .sidebar-card-enhanced {
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            border: 1px solid #f0f0f0;
            margin-bottom: 2rem;
            overflow: hidden;
        }
        
        .sidebar-card-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            padding: 1.5rem;
            border-bottom: 1px solid #e9ecef;
        }
        
        .sidebar-card-title {
            font-size: 1.1rem;
            font-weight: 700;
            color: #2d3748;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .category-item-enhanced {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 1.5rem;
            border: none;
            background: white;
            text-decoration: none;
            color: #4a5568;
            transition: all 0.2s ease;
            border-bottom: 1px solid #f7fafc;
        }
        
        .category-item-enhanced:hover {
            background: #f7fafc;
            color: #667eea;
            text-decoration: none;
        }
        
        .category-item-enhanced.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .category-item-enhanced.active:hover {
            color: white;
        }
        
        .category-item-left {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .category-emoji {
            font-size: 1.2rem;
        }
        
        .category-info {
            display: flex;
            flex-direction: column;
        }
        
        .category-name {
            font-weight: 600;
            font-size: 0.95rem;
        }
        
        .category-description {
            font-size: 0.75rem;
            opacity: 0.8;
            margin-top: 0.25rem;
        }
        
        .category-count-badge {
            background: #e2e8f0;
            color: #4a5568;
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 600;
        }
        
        .category-item-enhanced.active .category-count-badge {
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            padding: 1.5rem;
        }
        
        .stat-item-enhanced {
            text-align: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 12px;
        }
        
        .stat-number {
            font-size: 1.8rem;
            font-weight: 700;
            color: #667eea;
            display: block;
        }
        
        .stat-label {
            font-size: 0.8rem;
            color: #718096;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        /* Filter Alert */
        .filter-alert {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 12px;
            margin-bottom: 2rem;
        }
        
        /* Pagination Enhanced */
        .pagination-enhanced {
            display: flex;
            justify-content: center;
            margin-top: 3rem;
        }
        
        .pagination-enhanced .page-link {
            border: 2px solid #e2e8f0;
            color: #4a5568;
            padding: 0.75rem 1rem;
            margin: 0 0.25rem;
            border-radius: 8px;
            font-weight: 600;
        }
        
        .pagination-enhanced .page-item.active .page-link {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-color: #667eea;
            color: white;
        }
        
        .pagination-enhanced .page-link:hover {
            background: #f7fafc;
            border-color: #667eea;
            color: #667eea;
        }
        
        /* No videos state */
        .no-videos-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #718096;
        }
        
        .no-videos-icon {
            font-size: 4rem;
            margin-bottom: 1.5rem;
            opacity: 0.5;
        }
        
        /* Video Upload Styles */
        .video-thumbnail video {
            cursor: pointer;
        }
        
        .video-card-enhanced:hover video {
            opacity: 0.9;
        }
        
        /* Better placeholder styling */
        .video-thumbnail[poster] {
            background: #f0f0f0;
        }
        
        /* Responsive Design */
        @@media (max-width: 1200px) {
            .featured-card-floating {
                position: relative;
                top: auto;
                right: auto;
                margin-top: 2rem;
                margin-bottom: 2rem;
            }
        }
        
        @@media (max-width: 768px) {
            .hero-title {
                font-size: 2.5rem;
            }
            
            .hero-stats {
                flex-direction: column;
                gap: 1rem;
            }
            
            .academy-hero-header {
                padding: 2rem 0 3rem 0;
            }
            
            .video-card-enhanced {
                margin-bottom: 2rem;
            }
            
            .search-input-group .form-control,
            .search-btn {
                border-radius: 8px;
                margin-bottom: 1rem;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
}

<!-- Academy Hero Header -->
<div class="academy-hero-header">
    <div class="container">
        <div class="academy-hero-content">
            <div class="row">
                <div class="col-lg-8">
                    <h1 class="hero-title" data-translate-key="academy.hero.title">@Model.HeaderTitle</h1>
                    <p class="hero-subtitle" data-translate-key="academy.hero.subtitle">@Model.HeaderSubtitle</p>
                    <p class="hero-description" data-translate-key="academy.hero.description">@Model.HeaderDescription</p>
                    
                    <div class="hero-stats">
                        <div class="hero-stat-item">
                            <span class="hero-stat-number">@Model.TotalVideos</span>
                            <span class="hero-stat-label" data-translate-key="academy.stats.videosTotal">Videos Totales</span>
                        </div>
                        <div class="hero-stat-item">
                            <span class="hero-stat-number">@Model.TotalCategoriesCount</span>
                            <span class="hero-stat-label" data-translate-key="academy.stats.categoriesTotal">Categorías</span>
                        </div>
                        <div class="hero-stat-item">
                            <span class="hero-stat-number">@Model.TotalViewsFormatted</span>
                            <span class="hero-stat-label" data-translate-key="academy.stats.viewsTotal">Visualizaciones</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Featured Card Floating -->
        <div class="featured-card-floating d-none d-lg-block">
            <i class="@Model.FeaturedCard.IconClass featured-card-icon"></i>
            <span class="featured-card-number">@Model.FeaturedCard.Count</span>
            <div class="featured-card-title" data-translate-key="academy.featured.title">@Model.FeaturedCard.Title</div>
            <div class="featured-card-description" data-translate-key="academy.featured.description">@Model.FeaturedCard.Description</div>
        </div>
    </div>
</div>

<!-- Main Content Container -->
<div class="container">
    <!-- Search Section -->
    <div class="search-section">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <div class="search-input-group input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="fas fa-search text-muted"></i>
                    </span>
                    <input type="text" class="form-control border-start-0" 
                           placeholder="Buscar videos, categorías o temas..." 
                           data-translate-placeholder-key="academy.search.placeholder"
                           id="videoSearchInput" 
                           value="@Model.SearchQuery">
                </div>
            </div>
            <div class="col-lg-4">
                <button class="btn search-btn w-100" id="searchBtn" data-translate-key="buttons.search">
                    <i class="fas fa-search me-2"></i>Buscar
                </button>
            </div>
        </div>
    </div>

    <!-- Breadcrumbs -->
    <nav aria-label="breadcrumb" class="mt-4 mb-3">
        <ol class="breadcrumb bg-transparent p-0">
            <li class="breadcrumb-item">
                <a asp-controller="Admin" asp-action="Dashboard" data-translate-key="breadcrumbs.dashboard">Tablero</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page" data-translate-key="breadcrumbs.academy">Academia Toolbox</li>
        </ol>
    </nav>

    <!-- Filter Alert -->
    @if (Model.IsFiltered || Model.HasSearchQuery)
    {
        <div class="alert filter-alert d-flex align-items-center justify-content-between">
            <div>
                <i class="fas fa-filter me-2"></i>
                @if (Model.IsFiltered)
                {
                    <span data-translate-key="academy.filtering.category">Mostrando videos de:</span>
                    <strong>@Model.CurrentCategoryName</strong>
                    <span class="badge bg-white text-primary ms-2">@Model.TotalVideos</span>
                }
                @if (Model.HasSearchQuery)
                {
                    <span data-translate-key="academy.filtering.search">Búsqueda:</span>
                    <strong>"@Model.SearchQuery"</strong>
                }
            </div>
            <a href="@Url.Action("Index", "ToolboxAcademy")" class="btn btn-outline-light btn-sm" data-translate-key="academy.filtering.clearAll">
                <i class="fas fa-times me-1"></i>Limpiar filtros
            </a>
        </div>
    }

    <!-- Main Content Grid -->
    <div class="row">
        <!-- Videos List Column -->
        <div class="col-lg-8">
            @if (Model.Videos.Any())
            {
                <div class="row" id="videosList">
                    @foreach (var video in Model.Videos)
                    {
                        <div class="col-md-6 mb-4">
                            <div class="video-card-enhanced">
                                <!-- Video Thumbnail -->
                                <div class="video-thumbnail-container">
                                    @if (video.IsFeatured)
                                    {
                                        <div class="featured-badge-floating" data-translate-key="labels.featured">Destacado</div>
                                    }
                                    
                                    @if (video.IsVideoAvailable)
                                    {
                                        @if (video.EmbedUrl != null && video.EmbedUrl.StartsWith("/"))
                                        {
                                            <!-- For uploaded videos, show a video element with poster -->
                                            <video class="video-thumbnail" poster="@video.ThumbnailUrl" style="width: 100%; height: 100%; object-fit: cover;">
                                                <source src="@video.EmbedUrl" type="video/mp4">
                                            </video>
                                            <div class="video-play-overlay" data-video-type="Upload" data-video-url="@video.EmbedUrl">
                                                <i class="fas fa-play"></i>
                                            </div>
                                        }
                                        else
                                        {
                                            <img src="@video.ThumbnailUrl" alt="@video.Title" class="video-thumbnail">
                                            <div class="video-play-overlay" data-video-type="@(video.EmbedUrl.Contains("youtube") ? "YouTube" : video.EmbedUrl.Contains("vimeo") ? "Vimeo" : "Other")" data-video-url="@video.EmbedUrl">
                                                <i class="fas fa-play"></i>
                                            </div>
                                        }
                                        <div class="video-duration-badge">@video.DurationFormatted</div>
                                    }
                                    else
                                    {
                                        <div class="video-unavailable-overlay">
                                            <span data-translate-key="academy.videoUnavailable">Video no disponible</span>
                                        </div>
                                    }
                                </div>

                                <!-- Video Card Body -->
                                <div class="video-card-body">
                                    <!-- Category Badge -->
                                    <a href="@Url.Action("Index", "ToolboxAcademy", new { temaId = video.CategoryId })" 
                                       class="category-badge-enhanced" 
                                       style="background-color: @video.CategoryColor; color: white !important;">
                                        <span style="color: white !important;">@video.CategoryIcon</span>
                                        <span style="color: white !important;">@video.CategoryName</span>
                                    </a>

                                    <!-- Video Title -->
                                    <h5 class="video-title-enhanced">
                                        <a href="@Url.Action("Detail", "ToolboxAcademy", new { id = video.Id })">
                                            @video.Title
                                        </a>
                                    </h5>

                                    <!-- Video Description -->
                                    <p class="video-description-enhanced">@video.ShortDescription</p>

                                    <!-- Author Section -->
                                    <div class="video-author-section">
                                        <div class="author-info">
                                            <img src="@video.AuthorAvatar" alt="@video.AuthorName" class="author-avatar">
                                            <div class="author-name">@video.AuthorName</div>
                                        </div>
                                        <div class="video-stats">
                                            <span class="metadata-item">
                                                <i class="fas fa-eye"></i>
                                                @video.ViewCountFormatted
                                            </span>
                                        </div>
                                    </div>

                                    <!-- Video Metadata -->
                                    <div class="video-metadata">
                                        <span class="metadata-item">
                                            <i class="fas fa-calendar"></i>
                                            @video.PublishDateFormatted
                                        </span>
                                        <span class="metadata-item">
                                            <i class="fas fa-clock"></i>
                                            @video.DurationFormatted
                                        </span>
                                        @if (video.Rating > 0)
                                        {
                                            <span class="metadata-item">
                                                <i class="fas fa-star text-warning"></i>
                                                @video.Rating.ToString("0.1")
                                            </span>
                                        }
                                    </div>

                                    <!-- Watch Button -->
                                    <a href="@Url.Action("Detail", "ToolboxAcademy", new { id = video.Id })" 
                                       class="watch-video-btn" 
                                       data-translate-key="buttons.watchVideo">
                                        <i class="fas fa-play"></i>
                                        Ver Video
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="pagination-enhanced">
                        <nav aria-label="Video pagination">
                            <ul class="pagination">
                                @if (Model.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { temaId = string.IsNullOrEmpty(Model.CurrentCategorySlug) || Model.CurrentCategorySlug == "all" ? (int?)null : int.Parse(Model.CurrentCategorySlug), search = Model.SearchQuery, page = Model.CurrentPage - 1 })">
                                            <i class="fas fa-chevron-left"></i>
                                        </a>
                                    </li>
                                }
                                
                                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", new { temaId = string.IsNullOrEmpty(Model.CurrentCategorySlug) || Model.CurrentCategorySlug == "all" ? (int?)null : int.Parse(Model.CurrentCategorySlug), search = Model.SearchQuery, page = i })">@i</a>
                                    </li>
                                }
                                
                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { temaId = string.IsNullOrEmpty(Model.CurrentCategorySlug) || Model.CurrentCategorySlug == "all" ? (int?)null : int.Parse(Model.CurrentCategorySlug), search = Model.SearchQuery, page = Model.CurrentPage + 1 })">
                                            <i class="fas fa-chevron-right"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
            }
            else
            {
                <div class="no-videos-state">
                    <div class="no-videos-icon">🎬</div>
                    <h4 data-translate-key="academy.noVideos.title">No se encontraron videos</h4>
                    <p data-translate-key="academy.noVideos.description">
                        No hay videos disponibles para los criterios de búsqueda actuales.
                    </p>
                    <a href="@Url.Action("Index", "ToolboxAcademy")" 
                       class="btn btn-primary" 
                       data-translate-key="academy.noVideos.showAll">Ver todos los videos</a>
                </div>
            }
        </div>

        <!-- Enhanced Sidebar -->
        <div class="col-lg-4">
            <!-- Categories Card -->
            <div class="sidebar-card-enhanced">
                <div class="sidebar-card-header">
                    <h5 class="sidebar-card-title">
                        <i class="fas fa-th-large"></i>
                        <span data-translate-key="labels.temas">Temas</span>
                    </h5>
                </div>
                <div class="categories-list">
                    @foreach (var category in Model.Categories)
                    {
                        <a href="@Url.Action("Index", "ToolboxAcademy", new { temaId = category.Id == 0 ? (int?)null : category.Id })" 
                           class="category-item-enhanced @(category.IsActive ? "active" : "")"
                           data-category="@category.Id">
                            <div class="category-item-left">
                                <span class="category-emoji">@category.IconEmoji</span>
                                <div class="category-info">
                                    <div class="category-name">@category.Name</div>
                                    <div class="category-description">@category.Description</div>
                                </div>
                            </div>
                            <span class="category-count-badge">@category.VideoCount</span>
                        </a>
                    }
                </div>
            </div>

            <!-- Statistics Card -->
            <div class="sidebar-card-enhanced">
                <div class="sidebar-card-header">
                    <h5 class="sidebar-card-title">
                        <i class="fas fa-chart-bar"></i>
                        <span data-translate-key="academy.stats.title">Estadísticas</span>
                    </h5>
                </div>
                <div class="stats-grid">
                    <div class="stat-item-enhanced">
                        <span class="stat-number">@Model.Stats.TotalVideos</span>
                        <span class="stat-label" data-translate-key="academy.stats.videos">Videos</span>
                    </div>
                    <div class="stat-item-enhanced">
                        <span class="stat-number">@Model.Stats.FeaturedVideos</span>
                        <span class="stat-label" data-translate-key="academy.stats.featured">Destacados</span>
                    </div>
                    <div class="stat-item-enhanced">
                        <span class="stat-number">@Model.Stats.TotalAuthors</span>
                        <span class="stat-label" data-translate-key="academy.stats.authors">Autores</span>
                    </div>
                    <div class="stat-item-enhanced">
                        <span class="stat-number">@Model.Stats.TotalViewsFormatted</span>
                        <span class="stat-label" data-translate-key="academy.stats.views">Vistas</span>
                    </div>
                </div>
            </div>

            <!-- Featured Card for Mobile -->
            <div class="sidebar-card-enhanced d-lg-none">
                <div class="text-center p-4" style="background: linear-gradient(135deg, #ff6b9d 0%, #ff8a9e 100%); color: white;">
                    <i class="@Model.FeaturedCard.IconClass featured-card-icon"></i>
                    <span class="featured-card-number">@Model.FeaturedCard.Count</span>
                    <div class="featured-card-title" data-translate-key="academy.featured.title">@Model.FeaturedCard.Title</div>
                    <div class="featured-card-description" data-translate-key="academy.featured.description">@Model.FeaturedCard.Description</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Video Modal -->
<div class="modal fade" id="videoModal" tabindex="-1" aria-labelledby="videoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="videoModalLabel">Video</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div id="videoContainer" style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
                    <!-- Video content will be inserted here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/toolbox-academy.js"></script>
    <script>
        // Video modal handler
        $(document).on('click', '.watch-video-btn, .video-play-overlay', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            const $this = $(this);
            const videoCard = $this.closest('.video-card-enhanced');
            const videoTitle = videoCard.find('.video-title-enhanced a').text().trim();
            
            // For play overlay on video thumbnail
            if ($this.hasClass('video-play-overlay')) {
                const videoType = $this.attr('data-video-type');
                const videoUrl = $this.attr('data-video-url');
                
                if (videoUrl) {
                    // Open modal for all video types
                    openVideoModal(videoTitle, videoUrl, videoType);
                    return;
                }
            }
            
            // For watch video button, navigate to detail page
            const detailUrl = $this.attr('href') || $this.closest('a').attr('href');
            if (detailUrl) {
                window.location.href = detailUrl;
            }
        });
        
        // Function to open video modal
        function openVideoModal(title, videoUrl, videoType) {
            $('#videoModalLabel').text(title);
            
            let embedHtml = '';
            
            if (videoType === 'YouTube') {
                const videoId = extractYouTubeId(videoUrl);
                embedHtml = `<iframe src="https://www.youtube.com/embed/${videoId}?autoplay=1" 
                            style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" 
                            frameborder="0" allowfullscreen></iframe>`;
            } else if (videoType === 'Vimeo') {
                const videoId = extractVimeoId(videoUrl);
                embedHtml = `<iframe src="https://player.vimeo.com/video/${videoId}?autoplay=1" 
                            style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;" 
                            frameborder="0" allowfullscreen></iframe>`;
            } else {
                // For uploaded videos
                embedHtml = `<video controls autoplay style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;">
                            <source src="${videoUrl}" type="video/mp4">
                            Your browser does not support the video tag.
                            </video>`;
            }
            
            $('#videoContainer').html(embedHtml);
            $('#videoModal').modal('show');
        }
        
        // Extract YouTube video ID
        function extractYouTubeId(url) {
            const regex = /(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([^&\n?#]+)/;
            const match = url.match(regex);
            return match ? match[1] : null;
        }
        
        // Extract Vimeo video ID
        function extractVimeoId(url) {
            const regex = /vimeo\.com\/(\d+)/;
            const match = url.match(regex);
            return match ? match[1] : null;
        }
        
        // Clean up video when modal closes
        $('#videoModal').on('hidden.bs.modal', function() {
            $('#videoContainer').empty();
        });
        
        // Handle clicks on video thumbnails
        $(document).on('click', '.video-thumbnail', function(e) {
            e.preventDefault();
            const playOverlay = $(this).siblings('.video-play-overlay');
            if (playOverlay.length) {
                playOverlay.click();
            }
        });
    </script>
}

@functions {
    private string GetCategoryTranslateKey(string categorySlug)
    {
        return categorySlug switch
        {
            "all" => "academy.categories.all",
            "web-development" => "academy.categories.webDevelopment",
            "project-management" => "academy.categories.projectManagement",
            "design-ui-ux" => "academy.categories.designUiUx",
            "marketing-growth" => "academy.categories.marketingGrowth",
            "business-strategy" => "academy.categories.businessStrategy",
            _ => "academy.categories.other"
        };
    }
}