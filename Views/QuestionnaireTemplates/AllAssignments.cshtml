@model ToolBox.Models.ViewModels.CoachAssignmentsIndexViewModel

@{
    ViewData["Title"] = "Todas las Asignaciones";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/questionnaire-templates.css" asp-append-version="true" />
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 text-gray-800">Cuestionarios Asignados</h1>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "QuestionnaireTemplates")">Cuestionarios</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Asignaciones</li>
                </ol>
            </nav>
        </div>
        <div>
            <a href="@Url.Action("Index", "QuestionnaireTemplates")" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-1"></i>Volver a Plantillas
            </a>
        </div>
    </div>

    <!-- Filtros -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filtros</h6>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <!-- Filtro por Plantilla -->
                <div class="col-md-3">
                    <label for="templateFilter" class="form-label">Plantilla de Cuestionario</label>
                    <select name="templateId" id="templateFilter" class="form-select">
                        <option value="">Todas las plantillas</option>
                        @foreach (var template in Model.AvailableTemplates ?? new List<ToolBox.Models.ViewModels.QuestionnaireTemplateSelectViewModel>())
                        {
                            @if (Model.SelectedTemplateId == template.Id)
                            {
                                <option value="@template.Id" selected>
                                    @template.Title (@template.AssignmentCount asignaciones)
                                </option>
                            }
                            else
                            {
                                <option value="@template.Id">
                                    @template.Title (@template.AssignmentCount asignaciones)
                                </option>
                            }
                        }
                    </select>
                </div>

                <!-- Filtro por Cliente -->
                <div class="col-md-3">
                    <label for="clientFilter" class="form-label">Cliente</label>
                    <select name="clientId" id="clientFilter" class="form-select">
                        <option value="">Todos los clientes</option>
                        @foreach (var client in Model.AvailableClients ?? new List<ToolBox.Models.ViewModels.ClientSelectViewModel>())
                        {
                            @if (Model.SelectedClientId == client.Id)
                            {
                                <option value="@client.Id" selected>
                                    @client.FullName (@client.AssignmentCount asignaciones)
                                </option>
                            }
                            else
                            {
                                <option value="@client.Id">
                                    @client.FullName (@client.AssignmentCount asignaciones)
                                </option>
                            }
                        }
                    </select>
                </div>

                <!-- Filtro por Estado -->
                <div class="col-md-2">
                    <label for="statusFilter" class="form-label">Estado</label>
                    <select name="status" id="statusFilter" class="form-select">
                        <option value="all" selected="@(Model.SelectedStatus == "all")">Todos</option>
                        <option value="pending" selected="@(Model.SelectedStatus == "pending")">Pendiente</option>
                        <option value="inprogress" selected="@(Model.SelectedStatus == "inprogress")">En Progreso</option>
                        <option value="completed" selected="@(Model.SelectedStatus == "completed")">Completado</option>
                    </select>
                </div>

                <!-- Búsqueda -->
                <div class="col-md-3">
                    <label for="searchQuery" class="form-label">Búsqueda</label>
                    <div class="input-group">
                        <input type="text" name="searchQuery" id="searchQuery" class="form-control" 
                               placeholder="Buscar..." value="@Model.SearchQuery">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>

                <!-- Botón Limpiar -->
                <div class="col-md-1 d-flex align-items-end">
                    <a href="@Url.Action("AllAssignments")" class="btn btn-outline-secondary">
                        <i class="fas fa-times"></i>
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Tabla de Asignaciones -->
    <div class="card shadow">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">
                Asignaciones (@Model.TotalCount total)
            </h6>
            <div class="text-muted small">
                Página @Model.CurrentPage de @Model.TotalPages
            </div>
        </div>
        <div class="card-body">
            @if (Model.Assignments != null && Model.Assignments.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered" id="assignmentsTable">
                        <thead>
                            <tr>
                                <th>Cliente</th>
                                <th>Cuestionario</th>
                                <th>Asignado</th>
                                <th>Estado</th>
                                <th>Progreso</th>
                                <th>Completado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var assignment in Model.Assignments ?? new List<ToolBox.Models.ViewModels.CoachAssignmentItemViewModel>())
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <img src="@(assignment.ClientAvatarUrl ?? "/img/default-avatar.png")" 
                                                 alt="Avatar" class="rounded-circle me-2" 
                                                 style="width: 32px; height: 32px; object-fit: cover;">
                                            <div>
                                                <div class="fw-bold">@assignment.ClientName</div>
                                                <small class="text-muted">@assignment.ClientEmail</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="fw-bold">@assignment.QuestionnaireTitle</div>
                                        <small class="text-muted">@assignment.TotalQuestions preguntas</small>
                                    </td>
                                    <td>
                                        <div>@assignment.AssignedAt.ToString("dd/MM/yyyy")</div>
                                        <small class="text-muted">@assignment.AssignedAt.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        @switch (assignment.Status)
                                        {
                                            case ToolBox.Models.QuestionnaireStatus.Pending:
                                                <span class="badge bg-secondary">Pendiente</span>
                                                break;
                                            case ToolBox.Models.QuestionnaireStatus.InProgress:
                                                <span class="badge bg-warning">En Progreso</span>
                                                if (assignment.StartedAt.HasValue)
                                                {
                                                    <br><small class="text-muted">Iniciado: @assignment.StartedAt.Value.ToString("dd/MM HH:mm")</small>
                                                }
                                                break;
                                            case ToolBox.Models.QuestionnaireStatus.Completed:
                                                <span class="badge bg-success">Completado</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="progress me-2" style="width: 60px; height: 8px;">
                                                <div class="progress-bar" role="progressbar" 
                                                     style="width: @assignment.ProgressPercentage%"
                                                     aria-valuenow="@assignment.ProgressPercentage" 
                                                     aria-valuemin="0" aria-valuemax="100"></div>
                                            </div>
                                            <small class="text-muted">
                                                @assignment.AnsweredQuestions/@assignment.TotalQuestions
                                                (@assignment.ProgressPercentage%)
                                            </small>
                                        </div>
                                    </td>
                                    <td>
                                        @if (assignment.CompletedAt.HasValue)
                                        {
                                            <div>@assignment.CompletedAt.Value.ToString("dd/MM/yyyy")</div>
                                            <small class="text-muted">@assignment.CompletedAt.Value.ToString("HH:mm")</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @if (assignment.Status == ToolBox.Models.QuestionnaireStatus.Completed)
                                        {
                                            <a href="@Url.Action("ViewResponses", new { instanceId = assignment.InstanceId })" 
                                               class="btn btn-sm btn-primary">
                                                <i class="fas fa-eye me-1"></i>Ver Respuestas
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-muted small">Pendiente de completar</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Paginación -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Paginación de asignaciones" class="mt-4">
                        <ul class="pagination justify-content-center">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@GetPageUrl(i)">@i</a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No hay asignaciones</h5>
                    <p class="text-muted">
                        @if (!string.IsNullOrEmpty(Model.SearchQuery) || Model.SelectedTemplateId.HasValue || Model.SelectedClientId.HasValue || !string.IsNullOrEmpty(Model.SelectedStatus))
                        {
                            <span>No se encontraron asignaciones con los filtros aplicados.</span>
                            <br>
                            <a href="@Url.Action("AllAssignments")" class="btn btn-sm btn-outline-primary mt-2">
                                Limpiar filtros
                            </a>
                        }
                        else
                        {
                            <span>Aún no has asignado ningún cuestionario.</span>
                            <br>
                            <a href="@Url.Action("Index")" class="btn btn-sm btn-primary mt-2">
                                <i class="fas fa-plus me-1"></i>Crear Plantilla
                            </a>
                        }
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetPageUrl(int page)
    {
        var queryParams = new List<string>();
        
        if (Model.SelectedTemplateId.HasValue)
            queryParams.Add($"templateId={Model.SelectedTemplateId}");
        if (Model.SelectedClientId.HasValue)
            queryParams.Add($"clientId={Model.SelectedClientId}");
        if (!string.IsNullOrEmpty(Model.SelectedStatus))
            queryParams.Add($"status={Model.SelectedStatus}");
        if (!string.IsNullOrEmpty(Model.SearchQuery))
            queryParams.Add($"searchQuery={Uri.EscapeDataString(Model.SearchQuery)}");
        
        queryParams.Add($"page={page}");
        
        return Url.Action("AllAssignments") + "?" + string.Join("&", queryParams);
    }
}

<style>
.progress {
    background-color: #e9ecef;
}

.table th {
    background-color: #f8f9fc;
    border-top: 0;
    font-weight: 600;
    color: #5a5c69;
    font-size: 0.85rem;
}

.table td {
    vertical-align: middle;
    font-size: 0.875rem;
}

.badge {
    font-size: 0.75rem;
}

.btn-sm {
    font-size: 0.8rem;
}

@@media (max-width: 768px) {
    .table-responsive {
        font-size: 0.8rem;
    }
    
    .d-flex.align-items-center img {
        width: 24px !important;
        height: 24px !important;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Auto-submit form when filters change
    const filterSelects = document.querySelectorAll('#templateFilter, #clientFilter, #statusFilter');
    
    filterSelects.forEach(select => {
        select.addEventListener('change', function() {
            this.form.submit();
        });
    });
    
    // Search on Enter
    const searchInput = document.getElementById('searchQuery');
    if (searchInput) {
        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                this.form.submit();
            }
        });
    }
});
</script>