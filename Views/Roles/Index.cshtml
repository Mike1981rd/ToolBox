@model ToolBox.Models.ViewModels.RolesIndexPageViewModel

@{
    ViewData["Title"] = "Gestión de Roles";
    Layout = "_AdminLayout";
}

<!-- Breadcrumbs -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Admin" asp-action="Dashboard">Tablero</a></li>
        <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
    </ol>
</nav>

<!-- Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill me-2"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Role Cards Section -->
<div class="row g-4 mb-5">
    @foreach (var roleCard in Model.RoleCards)
    {
        <div class="col-sm-6 col-lg-4">
            <div class="card h-100 shadow-sm position-relative">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h5 class="card-title mb-0 text-primary">@roleCard.Name</h5>
                        <a asp-action="Edit" asp-route-id="@roleCard.Id" class="btn btn-sm btn-outline-primary py-1 px-2">
                            <i class="bi bi-pencil-square me-1"></i>Editar
                        </a>
                    </div>
                    @if (!string.IsNullOrEmpty(roleCard.Description))
                    {
                        <p class="card-text text-muted small mb-3">@roleCard.Description</p>
                    }
                    <div class="d-flex align-items-center">
                        <div class="avatar-group d-flex me-3" style="min-width: 56px;">
                            @if (roleCard.UserCount > 0)
                            {
                                var avatarsToShow = roleCard.UserAvatarUrls?.Where(url => !string.IsNullOrEmpty(url)).Take(4).ToList() ?? new List<string>();
                                var hasAvatars = avatarsToShow.Any();
                                var remainingCount = roleCard.UserCount - 4;
                                var showCounter = roleCard.UserCount > 4;
                                
                                if (hasAvatars)
                                {
                                    @for(int i = 0; i < avatarsToShow.Count; i++)
                                    {
                                        <div class="avatar-item" style="margin-left: @(i > 0 ? "-15px" : "0"); z-index: @(10 - i);">
                                            <img src="@avatarsToShow[i]" asp-append-version="true" alt="Avatar de usuario" class="rounded-circle border-white" style="width: 50px; height: 50px; object-fit: cover; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.1);" />
                                        </div>
                                    }
                                }
                                else if (roleCard.UserCount > 0)
                                {
                                    <div class="avatar-item">
                                        <img src="/img/default-avatar.png" asp-append-version="true" alt="Avatar por defecto" class="rounded-circle border-white" style="width: 50px; height: 50px; object-fit: cover; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.1);" />
                                    </div>
                                }
                                
                                if (showCounter)
                                {
                                    <div class="avatar-item d-flex align-items-center justify-content-center" style="margin-left: -15px; z-index: 5; width: 50px; height: 50px; background-color: #e9ecef; border-radius: 50%; border: 3px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                                        <span style="font-size: 16px; font-weight: 600; color: #495057;">+@remainingCount</span>
                                    </div>
                                }
                            }
                        </div>
                        <small class="text-muted">@roleCard.UserCount @(roleCard.UserCount == 1 ? "Usuario" : "Usuarios")</small>
                    </div>
                    @if (roleCard.UserCount == 0)
                    {
                        <a asp-action="Delete" asp-route-id="@roleCard.Id" class="position-absolute bottom-0 end-0 m-3 btn btn-sm btn-danger rounded-circle shadow-sm" 
                           style="width: 38px; height: 38px; display: flex; align-items: center; justify-content: center;" 
                           title="Eliminar rol" 
                           data-bs-toggle="tooltip" 
                           data-bs-placement="left">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    }
                </div>
            </div>
        </div>
    }
    <!-- Add New Role Card -->
    <div class="col-sm-6 col-lg-4">
        <a asp-controller="Roles" asp-action="Create" class="text-decoration-none">
            <div class="card h-100 shadow-sm add-role-card" style="cursor:pointer;">
                <div class="card-body text-center d-flex flex-column justify-content-center align-items-center border-2 border-dashed border-secondary rounded" style="min-height: 150px;">
                    <i class="bi bi-plus-circle-dotted fs-1 text-secondary mb-2"></i>
                    <h5 class="card-title text-secondary mb-1">Agregar Nuevo Rol</h5>
                    <p class="card-text small text-muted">Crear un nuevo rol si no existe.</p>
                </div>
            </div>
        </a>
    </div>
</div>

<!-- Users Table Section -->
<div class="card mt-5">
    <div class="card-header">
        <h5 class="card-title mb-0">Total de usuarios con sus roles</h5>
    </div>
    <div class="table-responsive">
        <table class="table table-hover table-striped mb-0">
            <thead class="table-light">
                <tr>
                    <th style="width: 45%;">USUARIO</th>
                    <th style="width: 30%;">ROL</th>
                    <th style="width: 25%;">ESTADO</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.AllSystemUsers != null && Model.AllSystemUsers.Any())
                {
                    foreach (var user in Model.AllSystemUsers)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(user.AvatarUrl))
                                    {
                                        <img src="@user.AvatarUrl" asp-append-version="true" alt="Avatar de @user.FullName" class="rounded-circle me-3" style="width: 40px; height: 40px; object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <img src="/img/default-avatar.png" asp-append-version="true" alt="Avatar por defecto" class="rounded-circle me-3" style="width: 40px; height: 40px;" />
                                    }
                                    <div>
                                        <h6 class="mb-0 text-truncate" style="max-width: 200px;">@user.FullName</h6>
                                        <small class="text-muted text-truncate d-block" style="max-width: 200px;">@user.Email</small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(user.RoleName))
                                {
                                    <span class="badge rounded-pill bg-info-subtle text-info-emphasis">
                                        <i class="bi bi-person-badge me-1"></i> @user.RoleName
                                    </span>
                                }
                                else
                                {
                                    <span class="badge rounded-pill bg-light-subtle text-secondary-emphasis">Sin Rol</span>
                                }
                            </td>
                            <td>
                                @if (user.IsActive)
                                {
                                    <span class="badge rounded-pill bg-success-subtle text-success-emphasis">Activo</span>
                                }
                                else
                                {
                                    <span class="badge rounded-pill bg-secondary-subtle text-secondary-emphasis">Inactivo</span>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="3" class="text-center py-5">
                            <i class="bi bi-people-fill fs-1 text-muted mb-2"></i>
                            <p class="mb-0 h5 text-muted">No se encontraron usuarios.</p>
                            <small class="text-muted">Intente agregar usuarios o ajuste los filtros si aplicó alguno.</small>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @* Paginación (si es necesaria, asegúrate que el ViewModel la soporte) *@
    <div class="card-footer d-flex justify-content-between align-items-center">
        <small class="text-muted">Mostrando @Model.AllSystemUsers.Count() de @Model.AllSystemUsers.Count() entradas</small>
        @* Aquí iría la lógica de paginación real si se implementa *@
        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-sm mb-0">
                <li class="page-item disabled"><a class="page-link" href="#">Anterior</a></li>
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">Siguiente</a></li>
            </ul>
        </nav>
    </div>
</div>

@* Modal para Agregar Rol (si existe y es relevante) *@
@* @await Html.PartialAsync("_AddRoleModal") *@

@section Styles {
    <link rel="stylesheet" href="~/css/roles-style.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/js/roles-script.js" asp-append-version="true"></script>
    <script>
        // Inicializar tooltips de Bootstrap
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}