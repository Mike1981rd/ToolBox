// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToolBox.Data;

#nullable disable

namespace ToolBox.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250524114526_AddLifeAreaEntity")]
    partial class AddLifeAreaEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToolBox.Models.LifeArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("IconColor")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DisplayOrder");

                    b.ToTable("LifeAreas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Connection with your inner self and beliefs",
                            DisplayOrder = 1,
                            IconClass = "fas fa-pray",
                            IconColor = "#8e44ad",
                            IsActive = true,
                            Title = "Spiritual",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Physical wellness and fitness",
                            DisplayOrder = 2,
                            IconClass = "fas fa-heartbeat",
                            IconColor = "#e74c3c",
                            IsActive = true,
                            Title = "Physical Health",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Relationships with loved ones",
                            DisplayOrder = 3,
                            IconClass = "fas fa-users",
                            IconColor = "#3498db",
                            IsActive = true,
                            Title = "Family & Friends",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Romantic relationships and partnerships",
                            DisplayOrder = 4,
                            IconClass = "fas fa-heart",
                            IconColor = "#e91e63",
                            IsActive = true,
                            Title = "Partner",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Professional growth and purpose",
                            DisplayOrder = 5,
                            IconClass = "fas fa-briefcase",
                            IconColor = "#34495e",
                            IsActive = true,
                            Title = "Mission/Career",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Financial stability and growth",
                            DisplayOrder = 6,
                            IconClass = "fas fa-dollar-sign",
                            IconColor = "#27ae60",
                            IsActive = true,
                            Title = "Finances",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Self-improvement and learning",
                            DisplayOrder = 7,
                            IconClass = "fas fa-graduation-cap",
                            IconColor = "#f39c12",
                            IsActive = true,
                            Title = "Personal Growth",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Leisure activities and hobbies",
                            DisplayOrder = 8,
                            IconClass = "fas fa-gamepad",
                            IconColor = "#9b59b6",
                            IsActive = true,
                            Title = "Fun & Recreation",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Travel and new adventures",
                            DisplayOrder = 9,
                            IconClass = "fas fa-plane",
                            IconColor = "#1abc9c",
                            IsActive = true,
                            Title = "Experiences",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457),
                            Description = "Living space and surroundings",
                            DisplayOrder = 10,
                            IconClass = "fas fa-home",
                            IconColor = "#95a5a6",
                            IsActive = true,
                            Title = "Environment",
                            UpdatedAt = new DateTime(2025, 5, 24, 11, 45, 25, 907, DateTimeKind.Utc).AddTicks(4457)
                        });
                });

            modelBuilder.Entity("ToolBox.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleName", "ActionName")
                        .IsUnique();

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionName = "Read",
                            Category = "General",
                            Description = "Ver y listar en Tablero",
                            ModuleName = "Dashboard"
                        },
                        new
                        {
                            Id = 2,
                            ActionName = "Write",
                            Category = "General",
                            Description = "Editar y actualizar en Tablero",
                            ModuleName = "Dashboard"
                        },
                        new
                        {
                            Id = 3,
                            ActionName = "Create",
                            Category = "General",
                            Description = "Crear nuevos registros en Tablero",
                            ModuleName = "Dashboard"
                        },
                        new
                        {
                            Id = 4,
                            ActionName = "Read",
                            Category = "Gestión de Contenido",
                            Description = "Ver y listar en Temas",
                            ModuleName = "Topics"
                        },
                        new
                        {
                            Id = 5,
                            ActionName = "Write",
                            Category = "Gestión de Contenido",
                            Description = "Editar y actualizar en Temas",
                            ModuleName = "Topics"
                        },
                        new
                        {
                            Id = 6,
                            ActionName = "Create",
                            Category = "Gestión de Contenido",
                            Description = "Crear nuevos registros en Temas",
                            ModuleName = "Topics"
                        },
                        new
                        {
                            Id = 7,
                            ActionName = "Read",
                            Category = "Gestión de Contenido",
                            Description = "Ver y listar en Gestión de Videos",
                            ModuleName = "VideoManagement"
                        },
                        new
                        {
                            Id = 8,
                            ActionName = "Write",
                            Category = "Gestión de Contenido",
                            Description = "Editar y actualizar en Gestión de Videos",
                            ModuleName = "VideoManagement"
                        },
                        new
                        {
                            Id = 9,
                            ActionName = "Create",
                            Category = "Gestión de Contenido",
                            Description = "Crear nuevos registros en Gestión de Videos",
                            ModuleName = "VideoManagement"
                        },
                        new
                        {
                            Id = 10,
                            ActionName = "Read",
                            Category = "Gestión de Usuarios",
                            Description = "Ver y listar en Clientes",
                            ModuleName = "Customers"
                        },
                        new
                        {
                            Id = 11,
                            ActionName = "Write",
                            Category = "Gestión de Usuarios",
                            Description = "Editar y actualizar en Clientes",
                            ModuleName = "Customers"
                        },
                        new
                        {
                            Id = 12,
                            ActionName = "Create",
                            Category = "Gestión de Usuarios",
                            Description = "Crear nuevos registros en Clientes",
                            ModuleName = "Customers"
                        },
                        new
                        {
                            Id = 13,
                            ActionName = "Read",
                            Category = "Gestión de Usuarios",
                            Description = "Ver y listar en Usuarios",
                            ModuleName = "Users"
                        },
                        new
                        {
                            Id = 14,
                            ActionName = "Write",
                            Category = "Gestión de Usuarios",
                            Description = "Editar y actualizar en Usuarios",
                            ModuleName = "Users"
                        },
                        new
                        {
                            Id = 15,
                            ActionName = "Create",
                            Category = "Gestión de Usuarios",
                            Description = "Crear nuevos registros en Usuarios",
                            ModuleName = "Users"
                        },
                        new
                        {
                            Id = 16,
                            ActionName = "Read",
                            Category = "Gestión de Usuarios",
                            Description = "Ver y listar en Roles",
                            ModuleName = "Roles"
                        },
                        new
                        {
                            Id = 17,
                            ActionName = "Write",
                            Category = "Gestión de Usuarios",
                            Description = "Editar y actualizar en Roles",
                            ModuleName = "Roles"
                        },
                        new
                        {
                            Id = 18,
                            ActionName = "Create",
                            Category = "Gestión de Usuarios",
                            Description = "Crear nuevos registros en Roles",
                            ModuleName = "Roles"
                        },
                        new
                        {
                            Id = 19,
                            ActionName = "Read",
                            Category = "Gestión de Usuarios",
                            Description = "Ver y listar en Instructores",
                            ModuleName = "Instructors"
                        },
                        new
                        {
                            Id = 20,
                            ActionName = "Write",
                            Category = "Gestión de Usuarios",
                            Description = "Editar y actualizar en Instructores",
                            ModuleName = "Instructors"
                        },
                        new
                        {
                            Id = 21,
                            ActionName = "Create",
                            Category = "Gestión de Usuarios",
                            Description = "Crear nuevos registros en Instructores",
                            ModuleName = "Instructors"
                        },
                        new
                        {
                            Id = 22,
                            ActionName = "Read",
                            Category = "Gestión de Contenido",
                            Description = "Ver y listar en Toolbox Academy",
                            ModuleName = "ToolboxAcademy"
                        },
                        new
                        {
                            Id = 23,
                            ActionName = "Write",
                            Category = "Gestión de Contenido",
                            Description = "Editar y actualizar en Toolbox Academy",
                            ModuleName = "ToolboxAcademy"
                        },
                        new
                        {
                            Id = 24,
                            ActionName = "Create",
                            Category = "Gestión de Contenido",
                            Description = "Crear nuevos registros en Toolbox Academy",
                            ModuleName = "ToolboxAcademy"
                        },
                        new
                        {
                            Id = 25,
                            ActionName = "Read",
                            Category = "Herramientas de Vida",
                            Description = "Ver y listar en Rueda de la Vida",
                            ModuleName = "WheelOfLife"
                        },
                        new
                        {
                            Id = 26,
                            ActionName = "Write",
                            Category = "Herramientas de Vida",
                            Description = "Editar y actualizar en Rueda de la Vida",
                            ModuleName = "WheelOfLife"
                        },
                        new
                        {
                            Id = 27,
                            ActionName = "Create",
                            Category = "Herramientas de Vida",
                            Description = "Crear nuevos registros en Rueda de la Vida",
                            ModuleName = "WheelOfLife"
                        },
                        new
                        {
                            Id = 28,
                            ActionName = "Read",
                            Category = "Herramientas de Vida",
                            Description = "Ver y listar en Rueda del Progreso",
                            ModuleName = "WheelOfProgress"
                        },
                        new
                        {
                            Id = 29,
                            ActionName = "Write",
                            Category = "Herramientas de Vida",
                            Description = "Editar y actualizar en Rueda del Progreso",
                            ModuleName = "WheelOfProgress"
                        },
                        new
                        {
                            Id = 30,
                            ActionName = "Create",
                            Category = "Herramientas de Vida",
                            Description = "Crear nuevos registros en Rueda del Progreso",
                            ModuleName = "WheelOfProgress"
                        },
                        new
                        {
                            Id = 31,
                            ActionName = "Read",
                            Category = "Herramientas de Vida",
                            Description = "Ver y listar en Rayos X de la Vida",
                            ModuleName = "XRayLife"
                        },
                        new
                        {
                            Id = 32,
                            ActionName = "Write",
                            Category = "Herramientas de Vida",
                            Description = "Editar y actualizar en Rayos X de la Vida",
                            ModuleName = "XRayLife"
                        },
                        new
                        {
                            Id = 33,
                            ActionName = "Create",
                            Category = "Herramientas de Vida",
                            Description = "Crear nuevos registros en Rayos X de la Vida",
                            ModuleName = "XRayLife"
                        },
                        new
                        {
                            Id = 34,
                            ActionName = "Read",
                            Category = "Herramientas de Vida",
                            Description = "Ver y listar en Evaluación de Vida",
                            ModuleName = "LifeAssessment"
                        },
                        new
                        {
                            Id = 35,
                            ActionName = "Write",
                            Category = "Herramientas de Vida",
                            Description = "Editar y actualizar en Evaluación de Vida",
                            ModuleName = "LifeAssessment"
                        },
                        new
                        {
                            Id = 36,
                            ActionName = "Create",
                            Category = "Herramientas de Vida",
                            Description = "Crear nuevos registros en Evaluación de Vida",
                            ModuleName = "LifeAssessment"
                        },
                        new
                        {
                            Id = 37,
                            ActionName = "Read",
                            Category = "Herramientas de Vida",
                            Description = "Ver y listar en Áreas de Vida",
                            ModuleName = "LifeAreas"
                        },
                        new
                        {
                            Id = 38,
                            ActionName = "Write",
                            Category = "Herramientas de Vida",
                            Description = "Editar y actualizar en Áreas de Vida",
                            ModuleName = "LifeAreas"
                        },
                        new
                        {
                            Id = 39,
                            ActionName = "Create",
                            Category = "Herramientas de Vida",
                            Description = "Crear nuevos registros en Áreas de Vida",
                            ModuleName = "LifeAreas"
                        },
                        new
                        {
                            Id = 40,
                            ActionName = "Read",
                            Category = "Productividad",
                            Description = "Ver y listar en Tareas",
                            ModuleName = "Tasks"
                        },
                        new
                        {
                            Id = 41,
                            ActionName = "Write",
                            Category = "Productividad",
                            Description = "Editar y actualizar en Tareas",
                            ModuleName = "Tasks"
                        },
                        new
                        {
                            Id = 42,
                            ActionName = "Create",
                            Category = "Productividad",
                            Description = "Crear nuevos registros en Tareas",
                            ModuleName = "Tasks"
                        },
                        new
                        {
                            Id = 43,
                            ActionName = "Read",
                            Category = "Productividad",
                            Description = "Ver y listar en Seguimiento de Hábitos",
                            ModuleName = "HabitTracker"
                        },
                        new
                        {
                            Id = 44,
                            ActionName = "Write",
                            Category = "Productividad",
                            Description = "Editar y actualizar en Seguimiento de Hábitos",
                            ModuleName = "HabitTracker"
                        },
                        new
                        {
                            Id = 45,
                            ActionName = "Create",
                            Category = "Productividad",
                            Description = "Crear nuevos registros en Seguimiento de Hábitos",
                            ModuleName = "HabitTracker"
                        },
                        new
                        {
                            Id = 46,
                            ActionName = "Read",
                            Category = "Configuración",
                            Description = "Ver y listar en Contenido de Emails",
                            ModuleName = "EmailContents"
                        },
                        new
                        {
                            Id = 47,
                            ActionName = "Write",
                            Category = "Configuración",
                            Description = "Editar y actualizar en Contenido de Emails",
                            ModuleName = "EmailContents"
                        },
                        new
                        {
                            Id = 48,
                            ActionName = "Create",
                            Category = "Configuración",
                            Description = "Crear nuevos registros en Contenido de Emails",
                            ModuleName = "EmailContents"
                        },
                        new
                        {
                            Id = 49,
                            ActionName = "Read",
                            Category = "Configuración",
                            Description = "Ver y listar en Configuración del Sitio",
                            ModuleName = "WebsiteSettings"
                        },
                        new
                        {
                            Id = 50,
                            ActionName = "Write",
                            Category = "Configuración",
                            Description = "Editar y actualizar en Configuración del Sitio",
                            ModuleName = "WebsiteSettings"
                        },
                        new
                        {
                            Id = 51,
                            ActionName = "Create",
                            Category = "Configuración",
                            Description = "Crear nuevos registros en Configuración del Sitio",
                            ModuleName = "WebsiteSettings"
                        },
                        new
                        {
                            Id = 52,
                            ActionName = "Read",
                            Category = "Configuración",
                            Description = "Ver y listar en Mensaje de Bienvenida",
                            ModuleName = "WelcomeMessage"
                        },
                        new
                        {
                            Id = 53,
                            ActionName = "Write",
                            Category = "Configuración",
                            Description = "Editar y actualizar en Mensaje de Bienvenida",
                            ModuleName = "WelcomeMessage"
                        },
                        new
                        {
                            Id = 54,
                            ActionName = "Create",
                            Category = "Configuración",
                            Description = "Crear nuevos registros en Mensaje de Bienvenida",
                            ModuleName = "WelcomeMessage"
                        });
                });

            modelBuilder.Entity("ToolBox.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedDashboard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ToolBox.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("ToolBox.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("BillingMethod")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusDetail")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TaxId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToolBox.Models.LifeArea", b =>
                {
                    b.HasOne("ToolBox.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("ToolBox.Models.RolePermission", b =>
                {
                    b.HasOne("ToolBox.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToolBox.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ToolBox.Models.User", b =>
                {
                    b.HasOne("ToolBox.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ToolBox.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("ToolBox.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
